//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.IO;
using System.Text;
namespace dbServer
{
    public static class FileManager
    {

        public static string myTables = "Available Tables";
        public static string tempTableString;
        public static bool willUpdateTables = true;

        private static string filePath = AppDomain.CurrentDomain.BaseDirectory;
        private static FileInfo[] MyFiles;


        //				Table Files
        public static string[] getTable(string tableName)
        {
            return File.ReadAllLines(tableName + ".txt");
        }
        public static bool tableExist(string tableName)
        {
            return File.Exists(tableName + ".txt");
        }
        public static void AddRow(string row, string tableName)
        {
            string[] table = addLineToStringArray(getTable(tableName),
                                                    row);
            updateTable(tableName, table);

        }
        private static string[] addLineToStringArray(string[] list, string line)
        {
            string[] newList = new string[list.Length + 1];

            for (int i = 0; i < list.Length; i++)
            {
                newList[i] = list[i];
            }
            newList[list.Length] = line;
            return newList;
        }
        public static void updateTable(string tableName, string[] table)
        {
            File.WriteAllLines(tableName, table);
        }
        public static void createTable(string tableName, string[] labels, string[] rows)
        {
            string top = "";
            for (int i = 0; i < labels.Length - 1; i++)
            {
                top = top + labels[i] + ",";//,
            }
            top = top + labels[labels.Length - 1] + "\n";

            for (int j = 0; j < rows.Length; j++)
            {
                top = top + rows[j] + "\n";
            }
            top = top + rows[rows.Length - 1] + "\n";

            File.WriteAllText(tableName + ".txt", top);
        }
        public static void createTableM(string tableName, string[] labels, string[] rows)
        {
            StringBuilder str = new StringBuilder();
            string finalstring = string.Join("\t", labels);//. puts either a period or a space between the labels
            str.Append(',');
            foreach (string item2 in rows)
            {
                str.Append(item2);
                str.Append(',');
            }
            File.WriteAllText(tableName + ".txt", finalstring + str.ToString());
        }

        public static string getAllTables()
        {

            DirectoryInfo dir = new DirectoryInfo(filePath);
            
            // Get all txt files in working directory
            if (willUpdateTables)
            {
                MyFiles = dir.GetFiles("*.txt");

                foreach (FileInfo file in MyFiles)
                {
                    myTables = myTables + "\n " + Path.GetFileNameWithoutExtension(file.Name);
                    
                }
                tempTableString = myTables;
                myTables = "";
                willUpdateTables = false;
                return tempTableString;
            }
            else {
                return tempTableString;
            }
        }
    }
}


